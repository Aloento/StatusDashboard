@using System.Globalization
@using Microsoft.EntityFrameworkCore
@using StatusDashboard.Components.Home
@using StatusDashboard.Services
@implements IAsyncDisposable
@inject IDbContextFactory<StatusContext> context;

<section class="flex flex-col gap-y-4 rounded-md bg-white px-8 py-6 shadow-md">
  <div class="flex justify-between">
    <div class="flex items-center gap-x-3">
      <Indicator Type="@theEvent.Type" />

      <h3 class="text-2xl font-medium text-slate-800">
        @theEvent.Title
      </h3>
    </div>
    
    <EventEditor Event="@theEvent" />
  </div>

  <div class="flex gap-x-2.5">
    <div class="flex flex-col gap-y-2">
      <label class="text-xl font-medium text-slate-600">
        Impact Type:
      </label>

      <label class="text-xl font-medium text-slate-600">
        Current Status:
      </label>

      <label class="text-xl font-medium text-slate-600">
        Start At:
      </label>

      <label class="text-xl font-medium text-slate-600">
        (Plan) End At:
      </label>
    </div>

    <div class="flex flex-col gap-y-2">
      <label class="text-xl font-medium text-slate-700">
        @theEvent.Type
      </label>

      <label class="text-xl font-medium text-slate-700">
        @status
      </label>

      <label class="text-xl font-medium text-slate-700">
        @theEvent.Start.ToUniversalTime().ToString("yyyy-MM-dd HH:mm 'UTC'", CultureInfo.InvariantCulture)
      </label>

      <label class="text-xl font-medium text-slate-700">
        @if (theEvent.End is null)
        {
          @("Still Ongoing")
        }
        else
        {
          @theEvent.End.Value.ToUniversalTime().ToString("yyyy-MM-dd HH:mm 'UTC'", CultureInfo.InvariantCulture)
        }
      </label>
    </div>
  </div>
  
  <div class="flex max-h-60 flex-col overflow-y-auto">
    <EventAffected />
  </div>
</section>
