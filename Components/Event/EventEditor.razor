<scale-modal
  heading="Edit Event"
  id="@nameof(EventEditor)"
  size="small">
  <EditForm class="flex flex-col gap-y-6" Model="form" OnValidSubmit="submit">
    <DataAnnotationsValidator />

    <div>
      <FluentTextField
        AutoComplete="off"
        Autofocus="true"
        @bind-Value="form.Title"
        Class="w-full"
        Label="@nameof(form.Title)"
        Placeholder="Please give the title of event"
        Required="true" />

      <ValidationMessage
        class="text-red-600"
        For="@(() => form.Title)" />
    </div>

    <div>
      <FluentSelect
        @bind-SelectedOption="form.Type"
        Items="@(Enum.GetValues<EventType>().Skip(1))"
        Label="@nameof(form.Type)"
        TOption="EventType" />
    </div>

    @{
      var values = Enum.GetValues<EventStatus>();
      var status =
        form.Type == EventType.Maintenance
          ? values.Take(4)
          : values.Skip(4).Take(4);
    }

    <div>
      <FluentSelect
        @bind-SelectedOption="form.Status"
        Items="@status"
        Label="@nameof(form.Status)"
        TOption="EventStatus" />
    </div>

    <div>
      <FluentTextArea
        @bind-Value="form.UpdateMsg"
        Class="w-full"
        Label="Update Message"
        Resize="TextAreaResize.Vertical" />

      <ValidationMessage
        class="text-red-600"
        For="@(() => form.UpdateMsg)" />
    </div>

    <scale-button class="self-end" size="small" type="submit">
      Submit
    </scale-button>
  </EditForm>
</scale-modal>

<scale-button onclick="openModal()" size="small">
  <scale-icon-action-edit accessibility-title="edit" />
  Edit
</scale-button>

<script>
  function openModal() {
    const modal = document.getElementById("EventEditor");
    modal.opened = true;
  }
</script>
